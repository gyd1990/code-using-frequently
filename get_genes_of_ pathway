library(KEGGREST)
listDatabases()
org <- keggList("organism")
kegg<- keggList("pathway","mmu")

query<- keggGet(c("mmu04510"))#focal adhension
gene1<-unlist(strsplit(query[[1]]$GENE[seq(2,length(query[[1]]$GENE),2)],split = ";"))[seq(1,length(query[[1]]$GENE),2)]


options(stringsAsFactors = F)
rm(list=ls())
load("F:/zy_THY/thy_human/thy_human_resequencing/human_thy.Rdata")

kegg_expression<-function(x,,org,num,data,pca,anno,cluster,col){
  #x为搜索的关键词,关键词不分大小写
  #num为匹配多个KEGG时选择的KEGG
  #pca为pca的坐标
  #data 需要是标准化log后的数据
  #anno 为注释文件,cluster为需要注释的列
  #col为颜色的注释
  library(KEGGREST)
  kegg<- keggList("pathway",org)#获得可用的KEGG
  
  kegg_id<-grep(x,kegg,value = T,ignore.case = T)
  if(!is.null(num)){
    kegg_id<-kegg_id[num]
  }
  if(length(kegg_id)>1){
    print(kegg_id)
  }else{
    query<-keggGet(names(kegg_id))#获得KEGG号
    gene_description<-unlist(strsplit(query[[1]]$GENE[seq(2,length(query[[1]]$GENE),2)],split = ";"))#获得KEGG中的基因集合  
    our_gene<-grep("]$",gene_description,perl = T,invert = T,value = T)
  }
  return(our_gene)
  library(ggplot2)
  data1<-data[intersect(our_gene,rownames(data)),rownames(pca)]
  data1<-data1[rowMeans(data1)>0,]
  scale_data<-t(apply(data1,1,function(x) 10*(x-0)/max(x)))
  pca$score<- colMeans(scale_data)             
  colnames(pca)<-c("Dim1","Dim2","score")
  ggplot(data=pca,aes(x=Dim1,y=Dim2,col=score))+geom_point()+
                 scale_color_gradientn(colours = colorRampPalette(c("grey","red"))(100))
  
  library(pheatmap)
  anno<-subset(anno,select=cluster)
  pheatmap(data[intersect(our_gene,rownames(data)),rownames(anno)[order(anno[,1])]],show_colnames = F,show_rownames = T,cluster_rows = F,cluster_cols =F,annotation_col = anno,annotation_colors = list(cluster=col))
}

kegg_expression(x="wnt",data=data_exprMat,pca=as.data.frame(pca$ind$coord[,1:2]),anno = anno_sc3,"sc3_3_clusters",col)
